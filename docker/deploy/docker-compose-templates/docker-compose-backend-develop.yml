version: "3.8"
services:
  # Service names should comply with the rules of building DNS names - they will be available
  # under these domain names inside the cluster virtual network.
  # (Service names should not contain underscores.)

  ${DOCKER_WEBDAV_HOSTNAME}:
    image: ${DOCKER_WEBDAV_IMAGE}
    networks:
      ${TEXT_EXTRACTION_SWARM_NETWORK}:
    volumes:
      - file_storage:/var/lib/dav
    environment:   # No need for auth - in prod envs the server is not accessible from outside of our network
      AUTH_TYPE: Basic
      USERNAME: ${DOCKER_WEBDAV_AUTH_USER}
      PASSWORD: ${DOCKER_WEBDAV_AUTH_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 10m
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports:
      - 8091:80

  ${DOCKER_RABBITMQ_HOSTNAME}:
    image: ${DOCKER_RABBITMQ_IMAGE}
    networks:
      ${TEXT_EXTRACTION_SWARM_NETWORK}:
    environment:
      - "RABBITMQ_DEFAULT_USER=${DOCKER_RABBITMQ_USER}"
      - "RABBITMQ_DEFAULT_PASS=${DOCKER_RABBITMQ_PASSWORD}"
      - "RABBITMQ_DEFAULT_VHOST=${DOCKER_RABBITMQ_VHOST}"
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 10m
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports: #
      - 56721:5672 #

  ${DOCKER_PG_HOSTNAME}:
    image: ${DOCKER_PG_IMAGE}
    networks:
      ${TEXT_EXTRACTION_SWARM_NETWORK}:
    environment:
      - "PGDATA=/var/lib/tes-postgres"
      - "POSTGRES_USER=${DOCKER_PG_USER}"
      - "POSTGRES_PASSWORD=${DOCKER_PG_PASSWORD}"
      - "POSTGRES_DB=${DOCKER_PG_DB_NAME}"
    tmpfs:
      - /tmp:size=4GB
    volumes:
      - postgres_data_13:/var/lib/tes-postgres
    read_only: false
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 10m
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports: #
      - 54330:5432 #

volumes:
  file_storage:
  rabbitmq_data:
  postgres_data_13:

networks:
  ${TEXT_EXTRACTION_SWARM_NETWORK}:
    external: true
